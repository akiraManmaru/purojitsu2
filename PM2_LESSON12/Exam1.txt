この問題は実習時間内の正解が必須です．
実習WebページからzipファイルをダウンロードしてEclipseのプロジェクトとしてインポートしてください．

==== 問題1. State パターンを使わない状態遷移の実現 ====

今回の課題では，配送ロボットを題材にする．

=== 1. 状態遷移モデル ===

本問では配送ロボットは以下の「状態」をとるとする．
なお，以下の説明では「／」記号のあとにあるアルファベット表記が実装に使用するクラス名やメソッド名を指している．

  * 「待ち」状態／Waiting
  * 「配送中」状態／Delivering
  * 「緊急停止」状態／EmergencyStop 

配送ロボットに対しては下記の操作を行うとする．

  * 音声コマンドを実行する／voiceCommand
  * リセットコマンドを実行する／resetCommand
  * 荷崩れが起きたことを検知／detectCollapse

それぞれの状態について，どのような操作を受け付け，どのような動きをするかは
同梱している状態遷移図（StateTransition1.png）に記している．
状態遷移図を参照する際には以下に注意すること．

  * 状態遷移を示す矢印の上には「操作／そのときの出力メッセージ」を示している．例えば「detectCollapse/荷崩れが起きたので緊急停止します」は，detectCollapse が行われたときの遷移を示し，そのときには「荷崩れが起きたので緊急停止します」と出力される．
  * 状態遷移図に示されていない操作については「（その操作は無効です）」と出力して元の状態のままとすること．

本問ではこれを再現するようなプログラムを作成する．
ただし，ここでは State パターンを用いずに，教科書では10章の最初の方に書いてあるやり方（if-then文を使う）で実装する．

=== 2. 実装の詳細 ===

本問では lesson12.exam1 パッケージを用いること．
実装するクラスやメソッドなどは配布している zip ファイルの中にある Javadoc を参照すること．Javadoc は doc ディレクトリの中にある．
配布しているソースファイルは半分程度しか実装できていない状態である．
Javadoc は仕様通りに実装したソードコードから作成したものであるので，
Javadoc と状態遷移図を参照しながら仕様通りに実装を完成させること．

実行結果が正しいことを確認できれば，各自の計算機で JUnit によるテストをパスすることを確認した上で JAR にまとめて提出せよ．
提出するファイルは lesson12.exam1 パッケージ全体である．テストドライブ（TestDrive_Exam1）は含めてはいけない．

=== TestDrive_Exam1.java の実行例 ===

以下に示すように，状態遷移を伴うメッセージについては [->EmergencyStop] のように遷移先の状態が分かるようにしている．（この場合は EmergencyStop に遷移した）

<code>
=== 配送開始 ===
配送を開始しました[->Delivering]
配送を終了しました[->Waiting]
配送を開始しました[->Delivering]
荷崩れが起きたので緊急停止します[->EmergencyStop]
リセットしました[->Waiting]
=== 「待ち」状態からのチェック ===
（その操作は無効です）
（その操作は無効です）
配送を開始しました[->Delivering]
=== 「配送中」状態からのチェック ===
（その操作は無効です）
荷崩れが起きたので緊急停止します[->EmergencyStop]
=== 「緊急停止」状態からのチェック ===
（その操作は無効です）
（その操作は無効です）
リセットしました[->Waiting]
</code>
